# Generated by Django 5.0.3 on 2024-04-15 12:31

import member.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('member_email', models.EmailField(blank=True, default='', error_messages={'unique': '該用戶名的用戶已存在。'}, max_length=254, unique=True)),
                ('member_username', models.CharField(blank=True, max_length=45, null=True)),
                ('member_nickname', models.CharField(blank=True, max_length=45, null=True)),
                ('member_register', models.DateTimeField(auto_now_add=True)),
                ('member_lastlogin', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('-member_register',),
            },
            managers=[
                ('objects', member.models.MyUserManager()),
            ],
        ),
    ]
